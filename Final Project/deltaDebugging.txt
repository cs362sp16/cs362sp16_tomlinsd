input.c:8:5: warning: incompatible implicit declaration of built-in function ‘printf’ [enabled by default]
     printf ("YOU HAVE FAILED ME.\n");
     ^
input.c: In function ‘main’:
input.c:28:3: warning: incompatible implicit declaration of built-in function ‘printf’ [enabled by default]
   printf("Correct great hall card behavior\n");
   ^
Exit code 0
Traceback (most recent call last):
  File "GCCDD.py", line 58, in <module>
    c = mydd.ddmin(deltas)              # Invoke DDMIN
  File "/nfs/stak/students/t/tomlinsd/computer_science/cs362/finalproject/DD.py", line 713, in ddmin
    return self.ddgen(c, 1, 0)
  File "/nfs/stak/students/t/tomlinsd/computer_science/cs362/finalproject/DD.py", line 605, in ddgen
    outcome = self._dd(c, n)
  File "/nfs/stak/students/t/tomlinsd/computer_science/cs362/finalproject/DD.py", line 623, in _dd
    assert tc == self.FAIL or tc == self.UNRESOLVED
AssertionError
flip2 ~/computer_science/cs362/finalproject 168% python GCCDD.py
Simplifying failure-inducing input...

sh: line 0: ulimit: stack size: cannot modify limit: Invalid argument
Exit code 0
#include "dominion.h"
#include "interface.h"

int failed = 0;

void myassert(int bool) {
  if (!bool) {
    printf ("YOU HAVE FAILED ME.\n");
    failed = 1;
  }

}
int main() {
        struct gameState g;

        int k[10] = {adventurer, gardens, embargo, village, minion, mine, cutpurse, sea_hag, tribute, smithy};

        initializeGame(2, k, 5, &g);

        addCardToHand(0, 16, &g);
        playCard(5, 0, 0, 0, &g);

        int i = numHandCards(&g);

        myassert(i == 6);

        if (!failed) {
                printf("Correct great hall card behavior\n");
        }

        return 0;
}
sh: line 0: ulimit: stack size: cannot modify limit: Invalid argument
input.c: In function ‘myassert’:
input.c:8:5: warning: incompatible implicit declaration of built-in function ‘printf’ [enabled by default]
     printf ("YOU HAVE FAILED ME.\n");
     ^
input.c: In function ‘main’:
input.c:28:3: warning: incompatible implicit declaration of built-in function ‘printf’ [enabled by default]
   printf("Correct great hall card behavior\n");
   ^
Exit code 0
Traceback (most recent call last):
  File "GCCDD.py", line 58, in <module>
    c = mydd.ddmin(deltas)              # Invoke DDMIN
  File "/nfs/stak/students/t/tomlinsd/computer_science/cs362/finalproject/DD.py", line 713, in ddmin
    return self.ddgen(c, 1, 0)
  File "/nfs/stak/students/t/tomlinsd/computer_science/cs362/finalproject/DD.py", line 605, in ddgen
    outcome = self._dd(c, n)
  File "/nfs/stak/students/t/tomlinsd/computer_science/cs362/finalproject/DD.py", line 623, in _dd
    assert tc == self.FAIL or tc == self.UNRESOLVED
AssertionError
flip2 ~/computer_science/cs362/finalproject 169%
